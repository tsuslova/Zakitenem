/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2014 Google Inc.
 */

//
//  GTLQueryApi.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   api/v1
// Description:
//   Zakitenem API
// Classes:
//   GTLQueryApi (9 custom class methods, 7 custom properties)

#import "GTLQueryApi.h"

#import "GTLApiForecastMessageSpotList.h"
#import "GTLApiUserMessageLoginInfo.h"
#import "GTLApiUserMessagePasswordRequsest.h"
#import "GTLApiUserMessageRegionList.h"
#import "GTLApiUserMessageSession.h"
#import "GTLApiUserMessageTools.h"
#import "GTLApiUserMessageUser.h"
#import "GTLApiUserMessageUserStatus.h"
#import "GTLApiUserMessageUserStatusList.h"

@implementation GTLQueryApi

@dynamic cookie, expires, fields, identifier, latitude, longitude, name;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map =
    [NSDictionary dictionaryWithObject:@"id"
                                forKey:@"identifier"];
  return map;
}

#pragma mark -
#pragma mark Service level methods
// These create a GTLQueryApi object.

+ (id)queryForAddStatusWithObject:(GTLApiUserMessageUserStatus *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"api.add_status";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (id)queryForAuthWithObject:(GTLApiUserMessageLoginInfo *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"api.auth";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLApiUserMessageUser class];
  return query;
}

+ (id)queryForLogoutWithObject:(GTLApiUserMessageSession *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"api.logout";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (id)queryForPasswordRequestWithObject:(GTLApiUserMessagePasswordRequsest *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"api.password_request";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLApiUserMessageTools class];
  return query;
}

+ (id)queryForPasswordTools {
  NSString *methodName = @"api.password_tools";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLApiUserMessageTools class];
  return query;
}

+ (id)queryForRegionsList {
  NSString *methodName = @"api.regions_list";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLApiUserMessageRegionList class];
  return query;
}

+ (id)queryForUserForecastsWithObject:(GTLApiUserMessageSession *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"api.user_forecasts";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLApiForecastMessageSpotList class];
  return query;
}

+ (id)queryForUserStatusListWithObject:(GTLApiUserMessageSession *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"api.user_status_list";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLApiUserMessageUserStatusList class];
  return query;
}

+ (id)queryForUserUpdateWithObject:(GTLApiUserMessageUser *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"api.user_update";
  GTLQueryApi *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLApiUserMessageUser class];
  return query;
}

@end
